- name: "Install runtime"
  hosts: [ "web" ]
  tasks:
    - name: "apt get install"
      apt:
        name: "{{item}}"
      with_items: "{{runtime.software}}"


- name: "Configure runtime"
  hosts: [ "web" ]
  tags: [ 'config', 'php' ]
  tasks:

  - name: "php - php.ini changes"
    lineinfile:
      dest: "{{item[1]}}"
      regexp: "{{item[0].pattern}}"
      line: "{{item[0].line}}"
      state: present
    with_nested:
      - "{{runtime.php.configuration}}"
      - "{{runtime.php.files}}"
    notify:
      - "restart php-fpm"

  handlers:
    - name: "restart php-fpm"
      service:
        name: "php5-fpm"
        state: restarted


- name: "Configure nginx"
  hosts: [ "web" ]
  tags: [ 'config', 'nginx' ]
  tasks:

  - name: "nginx - remove default configuration"
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent

  - name: "nginx - create/update configuration"          
    template:
      src: "templates/nginx_app.conf"
      dest: "/etc/nginx/sites-available/{{app.name}}"
    notify: 
      - "restart nginx"

  - name: "nginx - enable configuration"
    file:
      src: "/etc/nginx/sites-available/{{app.name}}"
      dest: "/etc/nginx/sites-enabled/{{app.name}}"
      state: link
    notify: 
      - "restart nginx"

  handlers:
    - name: "restart nginx"
      service:
        name: "nginx"
        state: "restarted"

- name: "Deploy app"
  hosts: [ "web" ]
  tags: [ "deploy" ]
  tasks:
 
  - name: "app - directories"
    file:
      path: "/var/www/{{app.name}}/{{item}}"
      state: directory
    with_items:
      - shared
      - releases

  - name: "app - get release name"
    shell: "date +%s"
    register: result

  - name: "app - set release path"
    set_fact:
      app:
        dest: "/var/www/{{app.name}}/releases/{{result.stdout}}"
            
  - name: "app - git checkout"
    git:
      repo: "{{app.repo}}"
      dest: "{{app.dest}}"
      
  - name: "app - download composer.phar"
    script: "files/composer.sh"
    args:
      creates: "/usr/local/bin/composer"

  - name: "app - symlink composer"
    file:
      src: "/usr/local/bin/composer.phar"
      dest: "/usr/local/bin/composer"
      state: link

  - name: "app - composer install"          
    composer:
      working_dir: "{{app.dest}}"
      no_dev: no
      command: install

  - name: "app - change user:group"
    file:
      dest: "{{app.dest}}"
      state: directory
      recurse: yes
      owner: "www-data"
      group: "www-data"

  - name: "app - change symlink"
    file:
      src: "{{app.dest}}"
      dest: "/var/www/{{app.name}}/current"
      state: link

